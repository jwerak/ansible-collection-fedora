---
- name: Import rpm keys
  ansible.builtin.rpm_key:
    state: present
    key: "{{ item }}"
  loop: "{{ rpm_keys_import }}"
  tags:
    - rpm

- name: Create RPM repositories
  ansible.builtin.yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    baseurl: "{{ item.baseurl }}"
    enabled: "{{ item.enabled }}"
    gpgcheck: "{{ item.gpgcheck }}"
    gpgkey: "{{ item.gpgkey }}"
    file: "{{ item.file | default(omit) }}"
  loop: "{{ rpm_repositories_create }}"
  tags:
    - rpm

- name: Get stats of firstrun file
  ansible.builtin.stat:
    path: "{{ __fedora_apps_firstrun_filepath }}"
  register: firsrunfile

- name: Install libdnf5 if it is a first run
  when: firsrunfile.stat.exists is false
  block:
    - name: Install python3-libdnf5 packages
      ansible.builtin.command: dnf install -y python3-libdnf5
      register: libdnf5_install
      changed_when: libdnf5_install.stdout is search('Installing')

    - name: Ensure ansible config directory exists
      ansible.builtin.file:
        state: directory
        path: "{{ __fedora_apps_confdir }}"
        mode: "0755"

    - name: Touch firstrun file
      ansible.builtin.file:
        path: "{{ __fedora_apps_firstrun_filepath }}"
        mode: "0644"
        state: touch

- name: Install RPM Packages
  ansible.builtin.dnf:
    name: "{{ rpm_packages }}"
    update_cache: true
    state: present
  tags:
    - rpm

- name: Add the flathub flatpak repository remote to the system installation
  community.general.flatpak_remote:
    name: "{{ item.name }}"
    state: present
    flatpakrepo_url: "{{ item.url }}"
    method: system
  loop: "{{ flatpak_repos }}"
  tags:
    - flatpak

- name: Install flatpak packages
  community.general.flatpak:
    name: "{{ flatpak_packages }}"
    state: present
  retries: 3
  tags:
    - flatpak

- name: Install pip packages as user
  ansible.builtin.pip:
    name: "{{ item }}"
    state: present
    extra_args: --user
  loop: "{{ pip_packages }}"
